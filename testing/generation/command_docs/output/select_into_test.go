// Copyright 2023 Dolthub, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package output

import "testing"

func TestSelectInto(t *testing.T) {
	tests := []QueryParses{
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING +"),
		Unimplemented("SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT ALL"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROW"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count OFFSET 0 ROW"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table EXCEPT SELECT 1 ORDER BY expression NULLS FIRST LIMIT ALL OFFSET 0 ROW"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item GROUP BY expression ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT ALL FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 LIMIT ALL OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("SELECT expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT count FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 FETCH FIRST count ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 LIMIT count OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression LIMIT count OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC LIMIT count OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("SELECT expression INTO new_table HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT count FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP new_table HAVING condition ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table UNION SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression DESC , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC LIMIT count FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT ALL FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table INTERSECT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMPORARY new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression LIMIT count FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC LIMIT ALL FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table HAVING condition ORDER BY expression DESC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition ORDER BY expression NULLS FIRST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item WHERE condition ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 LIMIT count FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST LIMIT ALL FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("SELECT expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table HAVING condition INTERSECT SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression DESC , expression OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT * INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table HAVING condition ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT expression output_name INTO TABLE new_table GROUP BY expression HAVING condition ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT count FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT * INTO new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table GROUP BY expression HAVING condition ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table HAVING condition ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table GROUP BY expression , expression ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT count FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 LIMIT ALL FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT count OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count FOR SHARE FOR SHARE"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("SELECT ALL * INTO TEMP new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC LIMIT count FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression , expression output_name INTO new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name INTO new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression ORDER BY expression , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression LIMIT count FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC LIMIT count FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression NULLS LAST , expression FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table WHERE condition UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition ORDER BY expression , expression NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table WHERE condition ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table HAVING condition ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO TABLE new_table UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL * INTO new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT * INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item , from_item GROUP BY expression ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression DESC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table HAVING condition ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT * INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression DESC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression USING + , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item HAVING condition ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table ORDER BY expression DESC , expression ASC LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT ALL FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO new_table FROM from_item , from_item ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table WHERE condition ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression INTO TEMP new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression USING + , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression INTO new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table GROUP BY expression ORDER BY expression NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table WHERE condition UNION SELECT 1 ORDER BY expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression ORDER BY expression USING + , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table WHERE condition HAVING condition ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table HAVING condition ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT ALL FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table WHERE condition HAVING condition ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition HAVING condition ORDER BY expression USING + , expression USING + FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression DESC , expression OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression ORDER BY expression DESC NULLS LAST , expression OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMP new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT * INTO TEMPORARY new_table ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression DESC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS FIRST FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO new_table INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT ALL FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT * INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table UNION SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table HAVING condition ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST LIMIT count FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT * INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY new_table HAVING condition ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression ASC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TABLE new_table UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table GROUP BY expression HAVING condition ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT count OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO new_table FROM from_item GROUP BY expression , expression ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table HAVING condition ORDER BY expression USING + , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table HAVING condition ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item WHERE condition HAVING condition ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression ASC , expression LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table GROUP BY expression , expression ORDER BY expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item HAVING condition ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table WHERE condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression USING + , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression DESC , expression ASC FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT count FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT ALL FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + LIMIT count OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMP new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT * INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC LIMIT count FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item , from_item HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table HAVING condition ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item ORDER BY expression USING + NULLS LAST , expression ASC OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL * INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC LIMIT count FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC , expression NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression ORDER BY expression DESC , expression USING + LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT * INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table WHERE condition ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT ALL FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROW ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT ALL FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TEMP new_table GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table GROUP BY expression ORDER BY expression , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL * INTO TEMPORARY new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL * INTO new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item , from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT ALL FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO new_table FROM from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC , expression LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT * INTO TEMP new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression , expression FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC LIMIT count FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST LIMIT count FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT ALL FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item WHERE condition ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT count FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC , expression LIMIT ALL FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + LIMIT ALL FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item EXCEPT DISTINCT SELECT 1 FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP TABLE new_table WHERE condition ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item ORDER BY expression NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + NULLS LAST FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table UNION SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression ASC OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC LIMIT count FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT count FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO TEMP TABLE new_table WHERE condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TABLE new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST LIMIT count FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table FROM from_item HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO TEMP TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression , expression LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TABLE new_table GROUP BY expression ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition UNION SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item UNION ALL SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression UNION SELECT 1 ORDER BY expression , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table WHERE condition HAVING condition ORDER BY expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP new_table UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TABLE new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT * INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMP new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP TABLE new_table EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS LAST , expression OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY TABLE new_table WHERE condition UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TABLE new_table FROM from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST LIMIT count FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC LIMIT ALL FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC LIMIT count OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression LIMIT count OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS LAST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT count FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT ALL FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC LIMIT ALL OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table GROUP BY expression , expression ORDER BY expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + LIMIT count OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO new_table WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP new_table FROM from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED TABLE new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression DESC FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression USING + NULLS LAST , expression FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION SELECT 1 FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table WHERE condition ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item ORDER BY expression USING + NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression LIMIT count FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition HAVING condition ORDER BY expression USING + , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression ORDER BY expression USING + , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMP new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC LIMIT ALL FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression INTO TEMP new_table FROM from_item UNION SELECT 1 ORDER BY expression ASC , expression USING + OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT count FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT ALL FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO new_table UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP new_table UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression LIMIT count FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table WHERE condition HAVING condition ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST LIMIT count FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table HAVING condition ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression ORDER BY expression NULLS LAST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO new_table INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression INTO new_table WHERE condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression INTO new_table GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item GROUP BY expression UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR UPDATE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression ORDER BY expression DESC , expression NULLS LAST FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression NULLS LAST FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT * INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression LIMIT count FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT count FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST LIMIT ALL FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression FETCH FIRST count ROW ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH FIRST ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) FETCH NEXT ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table GROUP BY expression ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMPORARY TABLE new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC LIMIT ALL FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH FIRST ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression , expression FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT * INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression ORDER BY expression DESC NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression , expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table GROUP BY expression HAVING condition ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table EXCEPT SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS FIRST FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMP new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMPORARY new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item EXCEPT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table UNION SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT count FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression DESC NULLS FIRST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP new_table WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROW ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression LIMIT count OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression FETCH NEXT count ROW ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table FROM from_item , from_item EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO TABLE new_table EXCEPT SELECT 1 ORDER BY expression , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression output_name INTO TEMPORARY new_table FROM from_item HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression INTO UNLOGGED new_table GROUP BY expression , expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS LAST , expression USING + FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + , expression LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMP new_table FROM from_item , from_item INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TEMP new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMP new_table HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression INTERSECT SELECT 1 ORDER BY expression , expression DESC LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP new_table HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table UNION ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition HAVING condition INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT count FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO TEMPORARY TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT count OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST LIMIT ALL OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TABLE new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMP new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO new_table HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression LIMIT ALL OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item GROUP BY expression UNION ALL SELECT 1 ORDER BY expression USING + , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT count FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMPORARY new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST LIMIT ALL FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TABLE new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROW ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TABLE new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + , expression NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression USING + LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + LIMIT count OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression INTO TABLE new_table FROM from_item , from_item WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression INTO new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP new_table WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS LAST OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST LIMIT count OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO new_table FROM from_item GROUP BY expression HAVING condition ORDER BY expression NULLS LAST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY new_table GROUP BY expression , expression EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO UNLOGGED TABLE new_table FROM from_item WHERE condition HAVING condition ORDER BY expression ASC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT count FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT ALL FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMP TABLE new_table FROM from_item UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression NULLS LAST FETCH NEXT count ROW ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO UNLOGGED new_table WHERE condition HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item UNION SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL * INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression INTO new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMP new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP TABLE new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression output_name INTO new_table FROM from_item GROUP BY expression EXCEPT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMPORARY TABLE new_table GROUP BY expression UNION ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL * INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC , expression ASC FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL * INTO TEMPORARY new_table FROM from_item UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression NULLS FIRST LIMIT ALL FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression INTO new_table FROM from_item GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TEMPORARY TABLE new_table FROM from_item , from_item HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMP TABLE new_table GROUP BY expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression , expression INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression USING + , expression USING + NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item , from_item WHERE condition INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED new_table WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + , expression NULLS FIRST OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression USING + , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table HAVING condition UNION SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO new_table WHERE condition HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMP new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TABLE new_table GROUP BY expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + , expression NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression AS output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression LIMIT count OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression INTO new_table FROM from_item , from_item GROUP BY expression , expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition EXCEPT ALL SELECT 1 LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO UNLOGGED TABLE new_table FROM from_item HAVING condition EXCEPT SELECT 1 ORDER BY expression NULLS LAST , expression NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TEMPORARY new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression USING + NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item ORDER BY expression NULLS FIRST , expression ASC FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression AS output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression USING + FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression INTO TEMPORARY new_table WHERE condition GROUP BY expression UNION SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST LIMIT count FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS LAST LIMIT ALL FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST count ROW ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TABLE new_table INTERSECT ALL SELECT 1 ORDER BY expression ASC , expression FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression USING + FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH NEXT ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression DESC NULLS FIRST FETCH FIRST count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT count ROWS ONLY FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS LAST , expression NULLS FIRST OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression UNION ALL SELECT 1 ORDER BY expression USING + , expression ASC FETCH NEXT ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item WINDOW window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression , expression UNION SELECT 1 ORDER BY expression NULLS LAST , expression DESC NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression USING + NULLS FIRST , expression USING + NULLS FIRST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression INTO TEMPORARY new_table FROM from_item GROUP BY expression , expression HAVING condition UNION ALL SELECT 1 ORDER BY expression , expression DESC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression INTO new_table WHERE condition GROUP BY expression , expression INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression INTO TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST LIMIT count OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition EXCEPT ALL SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression INTO TABLE new_table HAVING condition UNION SELECT 1 ORDER BY expression , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item , from_item GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition ORDER BY expression DESC , expression DESC NULLS FIRST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO TABLE new_table FROM from_item WHERE condition HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression NULLS LAST FETCH NEXT ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO UNLOGGED TABLE new_table WHERE condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) ORDER BY expression DESC , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO UNLOGGED new_table HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT * INTO TEMP TABLE new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST , expression ASC LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name INTO TEMP new_table FROM from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name INTO TEMPORARY new_table GROUP BY expression INTERSECT SELECT 1 ORDER BY expression DESC , expression NULLS LAST LIMIT count OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name , expression AS output_name INTO TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST LIMIT ALL OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT * INTO TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH NEXT ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression ASC FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression AS output_name , expression AS output_name INTO TEMP new_table FROM from_item , from_item HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) * INTO new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression AS output_name INTO TABLE new_table FROM from_item , from_item GROUP BY expression ORDER BY expression USING + NULLS FIRST , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression AS output_name INTO new_table FROM from_item , from_item HAVING condition INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression AS output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression output_name INTO new_table FROM from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item WHERE condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression output_name INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression DESC NULLS LAST , expression USING + NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROWS FOR UPDATE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT expression output_name INTO TEMPORARY TABLE new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) * INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + , expression USING + NULLS FIRST FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO TEMPORARY TABLE new_table FROM from_item WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TABLE new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST LIMIT count FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + LIMIT ALL FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression DESC NULLS FIRST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS LAST , expression USING + FETCH NEXT ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS FIRST FETCH FIRST count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name INTO TEMP new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH NEXT count ROW ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression UNION SELECT 1 ORDER BY expression , expression ASC FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC , expression NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMPORARY new_table WHERE condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name INTO new_table FROM from_item WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression NULLS LAST , expression ASC NULLS LAST FETCH FIRST ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item WHERE condition HAVING condition EXCEPT DISTINCT SELECT 1 FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table EXCEPT DISTINCT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression USING + NULLS LAST FETCH NEXT ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO UNLOGGED new_table GROUP BY expression , expression ORDER BY expression DESC NULLS FIRST , expression NULLS FIRST FETCH FIRST count ROWS ONLY FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression ASC NULLS LAST , expression ASC OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMP new_table FROM from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression output_name , expression AS output_name INTO TEMP new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + , expression NULLS LAST OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression INTO new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS FIRST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression AS output_name , expression output_name INTO TEMPORARY new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression USING + NULLS LAST , expression ASC NULLS LAST LIMIT count OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT expression , expression output_name INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression NULLS FIRST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT * INTO UNLOGGED new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression NULLS LAST LIMIT ALL OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO new_table GROUP BY expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression , expression DESC FETCH NEXT ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression USING + NULLS LAST , expression FETCH FIRST count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS LAST , expression DESC FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) * INTO TEMP TABLE new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression USING + FETCH NEXT count ROW ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression INTO new_table WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression NULLS FIRST , expression DESC NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO TEMPORARY new_table WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO UNLOGGED new_table WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression DESC FETCH NEXT ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression INTO UNLOGGED new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression AS output_name INTO TABLE new_table WHERE condition GROUP BY expression HAVING condition UNION SELECT 1 ORDER BY expression ASC , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name INTO UNLOGGED TABLE new_table FROM from_item , from_item GROUP BY expression , expression HAVING condition EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS LAST , expression ASC NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression output_name , expression INTO new_table GROUP BY expression WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT * INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC NULLS FIRST , expression DESC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression ORDER BY expression ASC NULLS LAST , expression NULLS LAST OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression AS output_name INTO TEMPORARY new_table FROM from_item WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS LAST LIMIT count OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO UNLOGGED TABLE new_table GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression DESC NULLS LAST , expression DESC NULLS FIRST LIMIT ALL OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression , expression ) expression output_name , expression output_name INTO TEMPORARY new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + NULLS LAST FETCH FIRST ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name , expression INTO TEMPORARY new_table GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression output_name , expression INTO UNLOGGED TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression , expression HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + NULLS FIRST FETCH FIRST count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression AS output_name INTO TEMP TABLE new_table WHERE condition HAVING condition INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression ASC FETCH NEXT count ROW ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression AS output_name INTO UNLOGGED TABLE new_table FROM from_item WINDOW window_name AS ( window_definition ) INTERSECT SELECT 1 ORDER BY expression DESC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression , expression AS output_name INTO new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression USING + NULLS FIRST , expression FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression , expression output_name INTO new_table WINDOW window_name AS ( window_definition ) EXCEPT ALL SELECT 1 ORDER BY expression , expression USING + FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression AS output_name , expression INTO TEMP new_table WHERE condition GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression AS output_name INTO new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name , expression INTO TEMPORARY TABLE new_table FROM from_item , from_item WHERE condition GROUP BY expression UNION DISTINCT SELECT 1 ORDER BY expression ASC NULLS LAST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression , expression AS output_name INTO TEMPORARY new_table FROM from_item , from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) INTERSECT DISTINCT SELECT 1 ORDER BY expression DESC , expression NULLS FIRST FETCH NEXT count ROWS ONLY OFFSET 0 ROW FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT ALL expression output_name , expression output_name INTO TEMPORARY new_table INTERSECT ALL SELECT 1 ORDER BY expression NULLS FIRST , expression DESC OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) SELECT ALL expression output_name , expression INTO TEMPORARY new_table FROM from_item UNION ALL SELECT 1 ORDER BY expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED TABLE new_table FROM from_item GROUP BY expression , expression HAVING condition WINDOW window_name AS ( window_definition ) UNION ALL SELECT 1 ORDER BY expression ASC NULLS FIRST , expression USING + LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression , expression output_name INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression WINDOW window_name AS ( window_definition ) INTERSECT ALL SELECT 1 ORDER BY expression DESC , expression DESC NULLS FIRST LIMIT count OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT DISTINCT expression output_name INTO UNLOGGED new_table FROM from_item GROUP BY expression , expression WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) EXCEPT DISTINCT SELECT 1 ORDER BY expression USING + , expression USING + NULLS LAST LIMIT ALL OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT expression AS output_name INTO TEMPORARY TABLE new_table FROM from_item GROUP BY expression , expression INTERSECT SELECT 1 ORDER BY expression DESC NULLS LAST , expression USING + FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression , expression AS output_name INTO TEMPORARY new_table HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION SELECT 1 ORDER BY expression , expression NULLS LAST FETCH FIRST count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression ) expression output_name , expression INTO TEMP TABLE new_table WHERE condition GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) ORDER BY expression ASC NULLS FIRST , expression DESC NULLS FIRST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT DISTINCT ON ( expression ) expression output_name , expression INTO UNLOGGED TABLE new_table WHERE condition GROUP BY expression HAVING condition EXCEPT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression NULLS LAST FETCH NEXT count ROW ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) , queryname AS ( select ) SELECT DISTINCT ON ( expression , expression ) expression AS output_name , expression INTO UNLOGGED new_table FROM from_item WHERE condition GROUP BY expression , expression WINDOW window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression , expression USING + NULLS FIRST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH RECURSIVE queryname AS ( select ) SELECT expression output_name INTO TEMPORARY TABLE new_table GROUP BY expression EXCEPT ALL SELECT 1 ORDER BY expression DESC , expression USING + NULLS LAST FETCH FIRST ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("SELECT ALL expression AS output_name , expression INTO TABLE new_table FROM from_item , from_item HAVING condition INTERSECT DISTINCT SELECT 1 ORDER BY expression ASC NULLS FIRST , expression ASC NULLS LAST FETCH NEXT ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
		Unimplemented("WITH queryname AS ( select ) , queryname AS ( select ) SELECT expression output_name , expression output_name INTO TEMP new_table FROM from_item , from_item GROUP BY expression HAVING condition WINDOW window_name AS ( window_definition ) , window_name AS ( window_definition ) UNION DISTINCT SELECT 1 ORDER BY expression ASC , expression DESC NULLS LAST FETCH FIRST count ROWS ONLY OFFSET 0 ROWS FOR SHARE OF table_name , table_name NOWAIT FOR SHARE OF table_name , table_name NOWAIT"),
	}
	RunTests(t, tests)
}
